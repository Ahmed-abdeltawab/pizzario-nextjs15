// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(cuid())
  name      String?
  email     String         @unique
  password  String
  image     String?
  phone     String?
  address   String?
  isAdmin   Boolean        @default(false)
  orders    OrderProduct[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Product {
  id          String         @id @default(cuid())
  name        String
  description String
  image       String
  price       Float
  order       Int            @default(1)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  sizes       Size[]
  extras      Extra[]
  Category    Category       @relation(fields: [categoryId], references: [id])
  categoryId  String
  orders      OrderProduct[]
}

model Category {
  id        String    @id @default(cuid())
  name      String
  order     Int       @default(1)
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id          String         @id @default(cuid())
  deliveryFee Float
  subtotal    Float
  total       Float
  paid        Boolean        @default(false)
  postalCode  String
  phone       String
  city        String
  country     String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  products    OrderProduct[]
}

model OrderProduct {
  id        String   @id @default(cuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  quantity  Int
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model Size {
  id        String   @id @default(cuid())
  name      SizeName
  price     Float
  Product   Product  @relation(fields: [productId], references: [id])
  productId String
}

enum SizeName {
  SMALL
  MEDIUM
  LARGE
}

model Extra {
  id        String    @id @default(cuid())
  name      ExtraName
  price     Float
  Product   Product?  @relation(fields: [productId], references: [id])
  productId String?
}

enum ExtraName {
  COKE
  SPRITE
  FRIES
  CHEESE
  BACON
}
